app:
  cli:
    enabled: false
spring:
  application:
    name: crm.validation
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/leadsdb
    username: leaduser
    password: secret
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
      # Read typed SpecificRecord on the consumer:
      specific.avro.reader: true
      # (optional) subject naming strategy â€“ defaults to TopicNameStrategy:
      # value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
      # value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      acks: all
      enable-idempotence: true
      retries: 10
      delivery-timeout-ms: 120000
      linger-ms: 5
      batch-size: 32768
    consumer:
      group-id: leads-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      auto-offset-reset: earliest
      properties:
        isolation.level: read_committed
    specific:
      avro:
        reader: true